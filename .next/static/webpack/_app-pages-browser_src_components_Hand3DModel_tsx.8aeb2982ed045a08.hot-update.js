"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_Hand3DModel_tsx",{

/***/ "(app-pages-browser)/./src/components/Hand3DModel.tsx":
/*!****************************************!*\
  !*** ./src/components/Hand3DModel.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Hand3DModel; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var p5__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! p5 */ \"(app-pages-browser)/./node_modules/p5/lib/p5.min.js\");\n/* harmony import */ var p5__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(p5__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Hand3DModel(param) {\n    let { leftHand, rightHand } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const p5InstanceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!canvasRef.current) return;\n        const sketch = (p)=>{\n            let handTexture;\n            p.preload = ()=>{\n                // Create a realistic hand texture programmatically\n                handTexture = p.createImage(128, 128);\n                handTexture.loadPixels();\n                for(let y = 0; y < handTexture.height; y++){\n                    for(let x = 0; x < handTexture.width; x++){\n                        const index = (y * handTexture.width + x) * 4;\n                        // Create skin-like color with variation\n                        const baseR = 255;\n                        const baseG = 200 + Math.sin(x * 0.1) * 20;\n                        const baseB = 150 + Math.cos(y * 0.1) * 15;\n                        // Add some texture variation\n                        const noise = Math.sin(x * 0.05) * Math.cos(y * 0.05) * 10;\n                        handTexture.pixels[index] = Math.max(200, Math.min(255, baseR + noise)); // R\n                        handTexture.pixels[index + 1] = Math.max(180, Math.min(220, baseG + noise)); // G\n                        handTexture.pixels[index + 2] = Math.max(140, Math.min(170, baseB + noise)); // B\n                        handTexture.pixels[index + 3] = 255; // A\n                    }\n                }\n                handTexture.updatePixels();\n            };\n            p.setup = ()=>{\n                p.createCanvas(800, 640, p.WEBGL);\n                p.frameRate(60);\n            };\n            p.draw = ()=>{\n                p.clear();\n                p.push();\n                p.translate(0, 0, -100);\n                // Set up lighting\n                p.ambientLight(60, 60, 60);\n                p.directionalLight(255, 255, 255, 0, 0, -1);\n                p.pointLight(255, 255, 255, 0, 0, 0);\n                // Render left hand\n                if (leftHand) {\n                    renderHand3D(p, leftHand.landmarks, [\n                        0,\n                        255,\n                        0\n                    ], \"left\");\n                }\n                // Render right hand\n                if (rightHand) {\n                    renderHand3D(p, rightHand.landmarks, [\n                        0,\n                        0,\n                        255\n                    ], \"right\");\n                }\n                p.pop();\n            };\n            const renderHand3D = (p, landmarks, color, handType)=>{\n                if (!landmarks || landmarks.length < 21) return;\n                p.push();\n                // Calculate hand center and orientation\n                const handCenter = calculateHandCenter(landmarks);\n                const handRotation = calculateHandRotation(landmarks);\n                const handScale = calculateHandScale(landmarks);\n                // Transform to hand position with mirrored coordinates\n                p.translate(-handCenter.x * p.width + p.width / 2, handCenter.y * p.height - p.height / 2, handCenter.z * 100);\n                p.rotateX(handRotation.x);\n                p.rotateY(handRotation.y);\n                p.rotateZ(handRotation.z);\n                p.scale(handScale);\n                // Render palm with texture\n                renderPalm(p, landmarks, color);\n                // Render fingers with texture\n                renderFingers(p, landmarks, color);\n                p.pop();\n            };\n            const calculateHandCenter = (landmarks)=>{\n                // Use wrist (landmark 0) as center\n                return {\n                    x: landmarks[0].x,\n                    y: landmarks[0].y,\n                    z: landmarks[0].z\n                };\n            };\n            const calculateHandRotation = (landmarks)=>{\n                // Calculate hand orientation based on palm landmarks\n                const wrist = landmarks[0];\n                const middleFinger = landmarks[12];\n                const indexFinger = landmarks[8];\n                // Calculate palm normal\n                const palmNormal = p.createVector(middleFinger.x - wrist.x, middleFinger.y - wrist.y, middleFinger.z - wrist.z);\n                return {\n                    x: Math.atan2(palmNormal.y, palmNormal.z),\n                    y: Math.atan2(palmNormal.x, palmNormal.z),\n                    z: Math.atan2(palmNormal.y, palmNormal.x)\n                };\n            };\n            const calculateHandScale = (landmarks)=>{\n                // Calculate hand size based on palm width\n                const wrist = landmarks[0];\n                const pinky = landmarks[17];\n                const thumb = landmarks[4];\n                const palmWidth = Math.abs(pinky.x - thumb.x);\n                return Math.max(0.5, Math.min(2.0, palmWidth * 10));\n            };\n            const renderPalm = (p, landmarks, color)=>{\n                // Create palm using textured spheres at key points\n                const palmLandmarks = [\n                    0,\n                    5,\n                    9,\n                    13,\n                    17\n                ]; // Wrist and finger bases\n                p.push();\n                p.texture(handTexture);\n                p.noStroke();\n                // Draw palm center with texture\n                const wrist = landmarks[0];\n                const palmCenter = {\n                    x: (wrist.x - 0.5) * 2,\n                    y: (wrist.y - 0.5) * 2,\n                    z: wrist.z\n                };\n                p.push();\n                p.translate(palmCenter.x, palmCenter.y, palmCenter.z);\n                p.fill(255, 200, 150, 200); // Skin color\n                p.sphere(0.08);\n                p.pop();\n                // Draw palm joints with texture\n                for(let i = 1; i < palmLandmarks.length; i++){\n                    const landmark = landmarks[palmLandmarks[i]];\n                    const x = (landmark.x - 0.5) * 2;\n                    const y = (landmark.y - 0.5) * 2;\n                    const z = landmark.z;\n                    p.push();\n                    p.translate(x, y, z);\n                    p.fill(255, 200, 150, 180); // Skin color\n                    p.sphere(0.05);\n                    p.pop();\n                }\n                // Draw palm connections with skin color\n                p.noFill();\n                p.stroke(255, 200, 150, 120);\n                p.strokeWeight(4);\n                for(let i = 0; i < palmLandmarks.length - 1; i++){\n                    const current = landmarks[palmLandmarks[i]];\n                    const next = landmarks[palmLandmarks[i + 1]];\n                    const x1 = (current.x - 0.5) * 2;\n                    const y1 = (current.y - 0.5) * 2;\n                    const z1 = current.z;\n                    const x2 = (next.x - 0.5) * 2;\n                    const y2 = (next.y - 0.5) * 2;\n                    const z2 = next.z;\n                    p.line(x1, y1, z1, x2, y2, z2);\n                }\n                p.pop();\n            };\n            const renderFingers = (p, landmarks, color)=>{\n                // Finger landmark indices\n                const fingerIndices = [\n                    [\n                        4,\n                        3,\n                        2,\n                        1,\n                        0\n                    ],\n                    [\n                        8,\n                        7,\n                        6,\n                        5\n                    ],\n                    [\n                        12,\n                        11,\n                        10,\n                        9\n                    ],\n                    [\n                        16,\n                        15,\n                        14,\n                        13\n                    ],\n                    [\n                        20,\n                        19,\n                        18,\n                        17\n                    ] // Pinky\n                ];\n                fingerIndices.forEach((finger, fingerIndex)=>{\n                    renderFinger(p, landmarks, finger, color, fingerIndex);\n                });\n            };\n            const renderFinger = (p, landmarks, fingerIndices, color, fingerIndex)=>{\n                p.push();\n                p.texture(handTexture);\n                // Draw finger joints as textured spheres\n                for(let i = 0; i < fingerIndices.length; i++){\n                    const landmark = landmarks[fingerIndices[i]];\n                    const x = (landmark.x - 0.5) * 2;\n                    const y = (landmark.y - 0.5) * 2;\n                    const z = landmark.z;\n                    p.push();\n                    p.translate(x, y, z);\n                    const jointSize = 0.025 * (1 - i * 0.1); // Smaller towards tip\n                    p.fill(255, 200, 150, 200); // Skin color\n                    p.sphere(jointSize);\n                    p.pop();\n                }\n                // Draw finger connections with skin color\n                p.noFill();\n                p.stroke(255, 200, 150, 150);\n                p.strokeWeight(3);\n                for(let i = 0; i < fingerIndices.length - 1; i++){\n                    const current = landmarks[fingerIndices[i]];\n                    const next = landmarks[fingerIndices[i + 1]];\n                    const x1 = (current.x - 0.5) * 2;\n                    const y1 = (current.y - 0.5) * 2;\n                    const z1 = current.z;\n                    const x2 = (next.x - 0.5) * 2;\n                    const y2 = (next.y - 0.5) * 2;\n                    const z2 = next.z;\n                    p.line(x1, y1, z1, x2, y2, z2);\n                }\n                p.pop();\n            };\n        };\n        p5InstanceRef.current = new (p5__WEBPACK_IMPORTED_MODULE_2___default())(sketch, canvasRef.current);\n        return ()=>{\n            if (p5InstanceRef.current) {\n                p5InstanceRef.current.remove();\n                p5InstanceRef.current = null;\n            }\n        };\n    }, [\n        leftHand,\n        rightHand\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: canvasRef\n    }, void 0, false, {\n        fileName: \"/Users/JoaquinNam/Desktop/MENTE_MAESTRA/web3/GCMND/src/components/Hand3DModel.tsx\",\n        lineNumber: 272,\n        columnNumber: 10\n    }, this);\n}\n_s(Hand3DModel, \"J1m3QQsjy0l2HbZx7Pvyedp8RmE=\");\n_c = Hand3DModel;\nvar _c;\n$RefreshReg$(_c, \"Hand3DModel\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Hand3DModel.tsx\n"));

/***/ })

});